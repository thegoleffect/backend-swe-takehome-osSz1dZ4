name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js $
      uses: actions/setup-node@v4
      with:
        node-version: $
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Run simulation
      run: npm run simulation
      env:
        BASE_URL: http://localhost:3000

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  docker-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t tictactoe-backend:$ .

    - name: Run Docker container test
      run: |
        docker run -d --name test-app -p 3000:3000 tictactoe-backend:$
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-app
        docker rm test-app

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Start application
      run: |
        npm run build
        npm start &
        sleep 10
        curl -f http://localhost:3000/health

    - name: Run integration tests
      run: |
        npm run test:integration
      env:
        BASE_URL: http://localhost:3000

    - name: Stop application
      run: pkill -f "npm start" || true
